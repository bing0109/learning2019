读写分类
    读写分离的必要性
	    1、大访问量的网站，大部分操作是查询（读数据库），写入数据库的操作相对较少，一般读操作不影响安全，写操作

    方案：
        提供一共数据库去读
        另外提供一共数据库去写
        只有一台服务器复制写，其他服务器复制读

    类似python的列表、元组


    django数控的读写分离
        后台实现：主从复制
            主数据库负责写，从数据库对外负责读，主数据库的写定期同步到从数据库
            

        模拟读写分离
            1、两个数据库，结构一样
               两个库要分别makemigration, migrate 
            2、两个库插入两条不同的数据
            3、修改settings.py
                    复制一个数据库设置，在default之后粘贴
                    把复制后的数据库别名改一下，改成dbwrite
                
                在settings.py 下面加一句话
                    DATABASE_ROUTERS=[
                        routers.MyRouter.MyReadWrite        //类的路径
                    ]
					即相当于建立routers文件夹，再在下面建立Router文件，在文件里面建一个类，类名是MyReadWriter
					类里面写两个方法：
						def db_for_read(self,model,**hints):
							return 'defautl'
							
						def db_for_write(self,model,**hints):
							return 'dbwrite'
				
			4、验证
				两个数据库分别插入不同的数据，
					User.objects.values()	读取到的是default的数据库里面的数据
					
					user=User()
					user.name='abcede'
					user.save()			写入dbwrite数据库
					
			5、设置数据库同步



参考资料
https://www.cnblogs.com/thismyblogs/p/9855801.html


django mysql数据库要用5.6以上版本



