# coding=utf-8
# author = cjb

"""

"""

"""

本节目标
掌握列表的常用操作

课程内容
a.序列
b.列表
c.列表的应用场景
d.访问列表
e.列表的索引和切片
f.列表的拼接
g.列表的更新
h.列表的删除

a.序列
序列是python中的基本数据结构
序列中的每个元素分配一个数字标识他们位置，也就是索引
python中有6种序列类型，列表和元组使用最多
序列都可以进行索引、切片、拼接

c.列表的应用场景
	1.taobao上商品加入购物车的时候
	2.自动化投简历屏蔽某些公司
	3.爬虫页面屏蔽某些信息

b.列表
列表是python中常见数据类型，中括号中逗号分开元素，元素可以不是同类型的数据
l=[1,2,3,4]
l2=[1,'yingmu',2,'chimu']
l3=[1,2,[3,4]]


d.列表的访问
	1.直接访问
	2.遍历访问
	3.成员运算访问

e.列表的索引和切片
索引可以理解为下标，左侧从0开始，右侧从-1开始
注意：（索引超出范围）
IndexError: list index out of range

f.列表的拼接
	l1=[1,2,3]
	l2=['a','b','c']
	print(l1+l2)
	[1, 2, 3, 'a', 'b', 'c']

g.列表的更新
	l=[1,2,3]
	print(l)
	l[2]=0
	print(l)

	l[-2]=3
	print(l)

h.列表的删除
	l=['o8ma','ladeng','lamgpu']
	print(l)
	del l[-2]
	print(l)

"""


#
"""

"""












# 列表的访问

l=['58','ganji','zhilian','51job']

print(l)

for a in l:
	print(a)

if '58' in l:
	print('58 is here!')




#列表的索引和切片----与字符串的操作一样

#列表更新
l = [1,2.2,4]
l[2] = 3
print(l)

#列表删除
del l[-2]
print(l)






"""
学习目标
掌握以下内容

课程内容
a.栈的方式访问列表
b.获取列表的索引
c.列表排序
d.列表推导式


a.栈的方式访问列表
	1.队列    先进先出
	2.栈      后进先出
	>>> l=[1,2,3,4]
	>>> l.append(5)
	>>> print(l)
	[1, 2, 3, 4, 5]
	>>> l.pop()
	5
	>>> print(l)
	[1, 2, 3, 4]

b.获取列表的索引
	注意：只能是同种类型类型数据进行操作，字符串和字符串，数字和数字
	注意：元素第一次出现的位置的索引
	l=['2ha','taidi','fadou','jiegeng']
	print(l.index('taidi'))
	1
	l=[1,2,4,3,2]
	print(l.index(2))
	1
	for index,value in enumerate(l):
    		 print('索引是'+str(index)+'数值是：'+str(value))
 
c.列表的排序
	>>> l1=[1,3,2,4]
	>>> l1.reverse()
	>>> print(l1)
	[4, 2, 3, 1]
	>>> l=[1,3,5,2,4,6]
	>>> l.sort()
	>>> print(l)
	[1, 2, 3, 4, 5, 6]
	>>> l.sort(reverse=True)
	>>> print(l)
	[6, 5, 4, 3, 2, 1]

d.列表推导式
	1.列表推导式是什么
	2.优势
	3.列表推导式的使用

1.列表推导式是什么
	又叫列表解析式，提供一种简单方法创建列表
	结构中括号包含一个表达式，一个语句可以有0个或者多个if语句，表达式是任意类型对象，返回结果是一个新的列表

2.优势
	1.代码短，可读性好
	2.列表推导式速度快

3.列表推导式使用
	标准格式
	[表达式 for 变量 in 列表 ]
	[表达式 for 变量 in 列表 if 条件]





1.设计一个小程序，需求如下：
定义一个很长的字符串，如：
str="apple12345678tyuiopfghjkl"
把该字符串按照反向的顺序打印出来，结果如下：
lkjhgfpoiuyt87654321elppa
a.通过reverse()的方法
b.不通过reverse()的方法
2.通过列表方式实现：
    1. 提示用户输入内容，如果为空则提示！
    2. 判断用户输入的字符串首字母是否为元音（A、E、I、O、U）
    3. 如果为元音，则在字符串后加上'ay'
        eg. 如果用户输入'apple'->'appleay'
    4. 如果首字母为辅音字母，则将该字符串首字母移动结尾，并加上'ay'
        eg. 如果用户输入'hello'->'ellohay'。
3.创建一个列表，包含学员名字，接受键盘输入，输入学员名称，判断名称是否存在于列表中，
如果存在，打印名字已经存在列表中，如果不存在，则添加信息到列表中，并且打印已经添加新信息

"""


#coding=utf-8
#给定列表进行操作
a=[1,2,3,4]
print([x-2 for x in a])

#没有给定列表可以使用range方法
print([3*x for x in range(1,11)])

#假如if条件进行列表推导
print([x for x in a if x%2==0])

#多个for语句进行列表推导
print([[x,y] for x in range(2) for y in range(2)])