#coding=utf-8

#nginx

#面向对象的3大特性：继承、封装、多态
#类：描述具有相同属性和方法的集合，定义集合中每个对象共有的属性和方法
#
#对象：通过类定义数据结构实例，某一具体事务的存在，现实中可以直接使用
#
#封装：抽象到数据和行为的结合，封装的目的是增强安全性，简化代码，使用者可以不用考虑具体细节，只需要通过外部接口一定权限来访问
#常见情况：通过开源软件进行修改，封装后形成自己的软件
#
#继承：一个派生类继承基类的属性和方法

#多态：针对不同类型变量进行相同操作，出现不同结果
#白骨精---打---哏了
#白龙马---打---核心成员


class student:
    def study(self):
        print('im study')

    def play(self):
        print('im play')

boy = student()    #产生一个student的对象，通过boy实例对象来访问熟悉和方法

boy.age = 20    #给对象添加属性，如果后面再次出现，表示对属性进行修改
boy.favor = 'football'

#通过实例对象访问类的方法
boy.study()

#访问类的属性
print(boy.age)
