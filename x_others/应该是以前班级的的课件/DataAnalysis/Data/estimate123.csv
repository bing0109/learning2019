优点,缺点,建议
讲的还行，就是感觉太快了,讲课语速过快,声音稍微大点，语速稍微再慢点
未发现,讲得快，跟读书一样，能听清就不错了，别说理解了,换位思考
有耐心,语速快,
1.思路清晰,1.声音小;2.语速快,
老师知识量储备丰富,节奏太快,希望稍慢一点
比较照顾学生的感受。能够很好的听取各方意见进行调整,希望能够讲解地更加细致,讲课的思路可以更加紧凑
1.老师能够将项目构造的整个流程说的很清楚,1.将解的时候不够仔细，导致只知道大致流程 但是不知道每个分部该怎么弄;2.编写代码的时候不写注释，导致后面回头看代码不了解是什么意思;3.讲课方式过于沉闷，缺乏趣味性和代入感,1.编写每个函数和调用函数的时候能够写下注释，让我们后面去看代码能够知道这行具体干什么;2.能够稍微适当活跃下课堂氛围，死气沉沉的课堂容易让人困乏
上课准时，不拖课，有自己的授课特色,无,讲课时可以先把基础知识点理清楚再进行项目，这样我们再看项目时就不会一脸茫然了
1.课件很详细;2.讲课讲得也很细心;3.很有责任心,暂无,暂无
同学提的建议能很有效的采纳,语气有点快，授课内容有点快,放慢教学速度，能够让我们轻松的听懂
1、备课用心;2、上课认真;3、上课过程不拖沓,1、语速过快;2、对于基础不好的同学来说有很多地方讲的太过粗略了。导致很多听不懂,放慢讲课速度，详讲每块代码的由来以及原因，最好可以带着学生一步一步完成项目
代码功底扎实，课程安排明确，脾气好,讲课语速过快，声音小，没有足够的课余时间，很急,延长休息、练习的时间，不要每次都那么急的讲课，保持每天上课前回顾以前的知识点这个传统
老师的技术是认可的，提前备好课件，时间观念强,不够详细，重点不够突出，声音小，速度快,加注释，详解，多点时间练习
时间很紧，课件不错，但是重点需标明，整套课件内容是有，就是没把重点突出，或者说是，没有把我们需要先掌握的表明。,自己的思路不能清晰完整的传达给我们。,希望能把自己的思路更好的表达出来，还有希望能熟练的使用！画图！截图工具！，因为白板上手写比较乱。
课件详细,无,无
课件做得好,声音太小,气场再强一些
有课件有源代码很好，老师很负责,其实还是因为每个同学的基础和接收能力不同，老师的讲课速度没法匹配到每一个人，大家多多互相帮助吧。,开心就好，老师别忘了注释代码啊
课件资料充足，,语速有点快，,恩
"1,负责任，不懂的都会讲;2,其他都比较好。",1，太快，赶进度;2，练习时间少;3，讲的不够透彻,1，进度放慢;2，再讲详细一点，用我们能懂的语言
没意见,没意见,没建议
资料准备详细,声音小，重点不突出，速度快,入门时请详细些，然后再深入讲
技术比较牛逼，课件相对详细，对我们提出的问题有耐心的回答，能虚心接受我们的建议,老师讲课语速有点飞驰，并且声音有点小，听课比较费劲，讲课代码未能时常写注释,尽量放慢语速，同时提高一些音量
1.内容丰富;2.专业技能过硬,1.授课速度稍快;2.讲解时稍快;3.例子讲解不是很详细;4.对于新出现的内容解释的不是很清楚.,"1.可以放慢教学脚步，确保我们能更好的消化;2.对于例子的讲解可以更加详细一点;3.对于新函数，新方法或者新内容可以讲解深一点.
"
自身的专业度够，编程逻辑，思路清晰，能够在有限时间里，大量知识点里迅速提取重点核心知识点总结给大家,音量偏小，语速偏快，可能时间紧张，很多比较重要的知识点也无法详细地由浅到深授课。整体偏快和没讲清楚 。 但老师自己的专业度是最好的一个,音量偏小的问题可以用扩音器，不用太为了赶进度而讲得太快，有很多知识点需要详细讲清楚 的，否则理解不了
1.技术过硬。讲课思路很清晰;2.上课句句干货，没有一句废话，不像某些人，天天靠吹牛逼续命;3.精心准备了课件，课件质量高，之前的某些老师连个课件都懒得做。,无,学会吹点牛逼，这样才能让大多数人喜欢。
有详细的课程准备，严格遵守上课时间，也有相应的知识拓张引导,讲课进入状态不太适应，直入主题没有宏观的的把控，然后具体讲解；讲得内容较多，没有突出重点；可能是时间不够,可以先给我们讲项目效果然后细致讲解达到效果的过程
课程详尽，积极解答问题，课表明确,无,无
1、备课资料详细;2、知识点列子多;3、讲课时间紧凑,1、语速有点快，不过今天慢了些;2、没有深入浅出，深奥难懂,建议尽量讲得直白一点，好理解一些
好，讲课认真,讲的太快，不够详细,希望讲得详细一点，慢一点
