
    Scrapy也有自己的提取数据的方法，即Selector选择器。Select是基于lxml来构建的，支持XPath选择器、CSS选择器以及正则表达式，功能齐全，解析速度和准确度非常高。
    Scrapy提供了两个实用的快捷方式: response.xpath() 及 response.css()，返回一个类 SelectorList 的实例, 它是一个新选择器的列表，可以调用 .extract()和extract_first() 来获得我们要具体提取的内容，extract()返回的是一个列表，extract_first()返回单个值。
    .xpath()和.css()可以嵌套使用

    Selector 也有一个 .re() 方法，用来通过正则表达式来提取数据。然而，不同于使用 .xpath() 或者 .css() 方法, .re() 方法返回unicode字符串的列表。所以你无法构造嵌套式的 .re() 调用。


        res = Selector(text=html)
        res.xpath('//title')                        # 定位到title标签  //表示从任意位置开始
        res.xpath('//tite/text()')                  # 获取title的text属性
        res.xpath('//tite/text()').extract_first()  # 抛出title的text属性的第一个值


        res.xpath('//div[@id="images"]/a')          # 找id为image的div下的a节点
        res.xpath('//div[@id="images"]/a/@href')    # 获取其href属性
        res.xpath('//div[@id="images"]/a/@href').extrct()   # 抛出href属性


    div下,属性href包含'image'的a节点的文本内容
        res.css('div a[href*="image"]::text').extract()
        res.xpath('//div/a[contains(@href,"image")]/text()').extract()

    /表示子节点
    //表示子节点或子孙节点    //href//a   表示从res的任意位置开始匹配href下包括所有子孙节点的a标签



    正则
        res.xpath('//div/a[contains(@href,"image")]/text()').re(r'Name: (.*)')
           把前面获取到的对象,根据re()里面的正则表达式进行处理
        res.xpath('//div/a[contains(@href,"image")]/text()').re_first(r'Name: (.*)')
            re_first(),只提取出满足要求的第一个


    .xpath()和.css()可以嵌套使用， .re(r''),不能嵌套使用










































